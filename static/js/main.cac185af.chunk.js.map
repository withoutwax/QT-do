{"version":3,"sources":["config.js","chart/theme.js","chart/index.js","components/Chart.js","components/ChartList.js","components/Main.js","spreadsheet.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["apiKey","discoveryDocs","spreadsheetId","scope","themes","background","text","meta","levelnull","level0","level1","level2","level3","level4","initChart","data","chartElement","console","log","canvas","document","querySelector","getContext","day","week","ctx","yearStartDay","Number","moment","dayOfYear","format","canvas_index","today","width","CANVAS_WIDTH","height","CANVAS_HEIGHT","dateIndex","font","fillText","fillStyle","THEME_02","fillRect","BOX_WIDTH","THEME_01","OFFSET_Y","length","months","weekNumberToMonths","OFFSET_X","calculateDays","BOX_COLOR","BOX_NOT_VALID_YET","BOX_HEIGHT","chart","date","i","undefined","currentDate","yearStart","diff","Chart","props","componentDidMount","state","chartNumber","chartData","className","this","React","Component","ChartList","dates","apiState","chartView","map","index","key","Main","window","gapi","load","initClient","client","init","config","then","callback","onLoad","sheets","spreadsheets","values","get","majorDimension","range","response","result","error","setState","chartList","Footer","PackageJson","version","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cac185af.chunk.js","sourcesContent":["export default {\n    apiKey: 'AIzaSyBXS3btjRhD2ER9yx4n_-cQny9k9PoOmDM',\n    discoveryDocs: ['https://sheets.googleapis.com/$discovery/rest?version=v4'],\n    spreadsheetId: '1qiOJ-Rwg97dyF-obiAfg5QDB_lXtVwGBMfQ3_mlAY7o',\n    scope: 'https://www.googleapis.com/auth/spreadsheets'\n}\n","export const themes = {\n    standard: {\n        background: \"#ffffff\",\n        text: \"#000000\",\n        meta: \"#666666\",\n        levelnull: \"#f5f9ff\",\n        level0: \"#ebedf0\",\n        level1: \"#c6e48b\",\n        level2: \"#7bc96f\",\n        level3: \"#239a3b\",\n        level4: \"#196127\",\n    },\n}","import moment from 'moment';\nimport { themes } from './theme';\n\nexport function initChart(data, chartElement) {\n    console.log('Chart will be initialized', data, 'Chart Element:', chartElement);\n    chart(data, chartElement);\n}\n\nconst BOX_WIDTH = 10;\nconst BOX_HEIGHT = 10;\nconst CANVAS_WIDTH = 10*90;\nconst CANVAS_HEIGHT = 10*20;\nconst BOX_COLOR = themes.standard.level0;\nconst BOX_NOT_VALID_YET = themes.standard.levelnull;\nconst THEME_01 = themes.standard.level1;\nconst THEME_02 = themes.standard.level2;\nconst OFFSET_X = 20;\nconst OFFSET_Y = 50;\n\nfunction chart(data, chartElement) {\n    let canvas = document.querySelector(`.${chartElement}`);\n    console.log('canvas', canvas, 'chartElement', chartElement);\n    // console.log(typeof chartElement);\n    console.log('data', data);\n   \n    // console.log( 'dayOfYear', dayOfYear );\n    if (canvas.getContext) {\n        let ctx = canvas.getContext('2d');\n\n        let day;\n        let yearStartDay = Number(moment().dayOfYear(1).format('d')) + 1;\n        let week;\n        let canvas_index = 1; // Finding the xth day of the year for canvas\n        let today = moment();\n\n        console.log(typeof yearStartDay);\n\n        ctx.canvas.width  = CANVAS_WIDTH;\n        ctx.canvas.height = CANVAS_HEIGHT;\n        // console.log(calculateDays(data[0], 14) );\n        // console.log(data[14]);\n        // console.log(moment(undefined))\n        let dateIndex = 1;\n\n        // TEXT: Title\n        ctx.font = \"normal 24px Heebo\";\n        ctx.fillText(data[0], 0, 24);\n\n        // Legend\n        ctx.fillStyle = THEME_02;\n        ctx.fillRect(33, 165, BOX_WIDTH, BOX_WIDTH);\n        ctx.fillStyle = '#000000';\n        ctx.font = \"normal 12px Heebo\";\n        ctx.fillText(\" = Today\", 47, 175);\n\n        ctx.fillStyle = THEME_01;\n        ctx.fillRect(110, 165, BOX_WIDTH, BOX_WIDTH);\n        ctx.fillStyle = '#000000';\n        ctx.font = \"normal 12px Heebo\";\n        ctx.fillText(\" = Done\", 124, 175);\n\n\n        // Display Today's Date\n        ctx.font = \"normal 18px Heebo\";\n        ctx.fillText(\"Today's Date: \", 750, OFFSET_Y);\n        ctx.font = \"normal 12px Heebo\";\n        ctx.fillText(today.format('ll'), 750, OFFSET_Y+20);\n\n        // Display Number of Successes\n        ctx.font = \"normal 18px Heebo\";\n        ctx.fillText(\"Total: \", 750, OFFSET_Y+75);\n        ctx.font = \"normal 12px Heebo\";\n        ctx.fillText((data.length - 1) + \" Days\", 750, OFFSET_Y+95);\n\n        for (week = 1; week <= 53; week++) {\n\n            // Display Months\n            ctx.fillStyle = '#000000';\n            ctx.font = \"normal 10px Heebo\";\n            let months = weekNumberToMonths(week); \n            ctx.fillText(months, (OFFSET_X+(week*(BOX_WIDTH + 3))), OFFSET_Y);\n\n            for (day = 1; day <= 7; day++) {\n\n                // Setting the start date (eg - Mon, Tues etc)\n                if (week === 1 && day === 1) {\n                    day += yearStartDay;\n                }\n                // console.log(typeof day);\n                \n                // ctx.fillRect((week*(BOX_WIDTH + 3)), (day*(BOX_HEIGHT + 3)), BOX_WIDTH, BOX_WIDTH);\n\n                if (calculateDays(data, dateIndex) === canvas_index) { // Did Exercise\n                    // console.log(\"red_index\", canvas_index);\n                    ctx.fillStyle = THEME_01;\n                    dateIndex += 1;\n                } else if (calculateDays([today], 0) === canvas_index) {\n                    // console.log(\"today!\");\n                    ctx.fillStyle = BOX_COLOR;\n                } else if (calculateDays([today], 0) < canvas_index) {\n                    ctx.fillStyle = BOX_NOT_VALID_YET;\n                } else {\n                    // console.log(\"canvas_index\", canvas_index);\n                    ctx.fillStyle = BOX_COLOR;\n                }\n\n                ctx.fillRect((OFFSET_X + (week*(BOX_WIDTH + 3))), (OFFSET_Y + (day*(BOX_HEIGHT + 3))), BOX_WIDTH, BOX_WIDTH);\n                // ctx.fillText(canvas_index, (week*(BOX_WIDTH + 3)), (day*(BOX_HEIGHT + 3)));\n                // console.log(canvas_index);\n                canvas_index += 1;\n                if (canvas_index > 365) {\n                    console.log(\"NEXT YEAR\");\n                    break;\n                }\n                \n            }\n        }\n        \n    }\n}\n\nfunction calculateDays(date, i) {\n    \n    // if (date[i] === \"09/05/2019\") {\n        // console.log(i, date[i]);\n    // }\n    if (date[i] === undefined) {\n        return null;\n    }\n    \n    let currentDate = moment(date[i]);\n    let yearStart = moment('01/01/2019');\n    let numDays = currentDate.diff(yearStart, 'days');\n    return numDays;\n    \n}\n\nfunction weekNumberToMonths(week) {\n    switch(week) {\n        case 1:\n            return \"Jan\";\n        case 5:\n            return \"Feb\";\n        case 9:\n            return \"Mar\";\n        case 14:\n            return \"Apr\";\n        case 18:\n            return \"May\";\n        case 22:\n            return \"Jun\";\n        case 27:\n            return \"Jul\";\n        case 31:\n            return \"Aug\";\n        case 36:\n            return \"Sep\";\n        case 40:\n            return \"Oct\";\n        case 44:\n            return \"Nov\";\n        case 49:\n            return \"Dec\";\n        default:\n            return \"\";\n    }\n}\n\n// NEW IDEA for a HTML5 Canvas Library\n// function CanvasText(ctx, text, textSize, textStyle = \"normal\", color, typeFace, posX, posY) {\n//     let font = \"'\" + textStyle + ' ' + textSize + ' ' + typeFace + \"'\";\n\n//     if (color) { ctx.fillStyle = color; }\n//     ctx.font = font;\n//     ctx.fillText(text, posX, posY);\n// }","import React from 'react';\nimport { initChart } from '../chart/index'; \n\nclass Chart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: this.props.chartData.date,\n            chartNumber: this.props.chartNumber\n        }\n    }\n    componentDidMount = () => {\n        // console.log(this.state.date);\n        console.log(\"Chart Component Did Mount\");\n        initChart(this.state.date, `chart${this.state.chartNumber}`);\n    }\n\n    render() {\n        console.log(\"Chart render\");\n        return(\n            <div>\n                <canvas className={`chart${this.state.chartNumber}`}>Chart</canvas>\n            </div>\n        );\n    }\n\n}\n\nexport default Chart;","import React from 'react';\nimport Chart from './Chart';\n\nimport '../scss/Chart.scss';\n\nclass ChartList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dates: this.props.apiState.dates,\n        }\n    }\n\n    render() {\n        console.log('render');\n        let chartView = this.state.dates.map((data, index) => {\n            let props = {\n                chartData: data,\n                chartNumber: index\n            }\n            return <Chart key={index} {...props} />\n        });\n\n        return(\n            <div className=\"chart-container\">\n                {/* <canvas className=\"chart\">Chart</canvas> */}\n\n                { chartView }\n            </div>\n        );\n    }\n}\n\nexport default ChartList;","import React from 'react';\nimport config from '../config';\nimport { load } from '../spreadsheet';\n\nimport ChartList from './ChartList';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dates: []\n        }\n    }\n\n    componentDidMount = () => {\n        window.gapi.load('client', this.initClient);\n    }\n\n    initClient = () => {\n        // 2. Initialize the JavaScript client Library\n        window.gapi.client\n            .init({\n                'apiKey': config.apiKey,\n                // Your API key will be automaticlly added to the Discovery Documents URLs.\n                'discoveryDocs': config.discoveryDocs\n                \n            })\n            .then(() => {\n                // 3. Initialize and make the API request.\n                load(this.onLoad);\n        });\n    };\n\n    onLoad = (data, error) => {\n        if (data) {\n            const dates = data.dates;\n            this.setState({ dates });\n        } else {\n            this.setState({ error });\n        }\n    }\n\n    render() {\n        console.log('Main.js', this.state.dates);\n\n        // Render the chartList after the data is received by the API\n        const chartList = this.state.dates.length > 0 ? <ChartList apiState={this.state}/> : <div>Loading...</div>;\n        return(\n            <main>\n                { chartList }\n            </main>\n        );\n    }\n}\n\nexport default Main;","import config from \"./config\";\n\n/*\n    Load the dates from the spreadsheet\n    Get the right values from it and assign.\n*/\n\nexport function load(callback) {\n    window.gapi.client.load('sheets', 'v4', () => {\n        window.gapi.client.sheets.spreadsheets.values\n            .get({\n                spreadsheetId: config.spreadsheetId,\n                majorDimension: 'COLUMNS',\n                range: 'Sheet1!A:R'\n            })\n            .then(\n                response => {\n                    const data = response.result.values;\n                    const dates = data.map(date => ({\n                        date: date\n                    })) || [];\n\n                    callback({\n                        dates\n                    });\n                },\n                response => {\n                    callback(false, response.result.error);\n                }\n            );\n    });\n}","import React from 'react';\nimport PackageJson from '../../package.json';\n\nfunction Footer() {\n    return(\n        <footer>\n            <p>version v{PackageJson.version}</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './App.scss';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return ( \n            <section className=\"App\" >\n                <h1>지탁 순 QT 기록표</h1>\n                <Main />\n                <Footer />\n            </section>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}